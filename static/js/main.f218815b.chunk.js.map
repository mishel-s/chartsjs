{"version":3,"sources":["commonComponents/notifications/notification.action.js","redux/reducers/notificationRedux.reducer.js","redux/reducers/RootReducer.reducer.js","commonComponents/notifications/notification.saga.js","redux/sagas.js","components/header.component.js","components/footer.component.js","commonComponents/charts/line/LineChart.component.js","commonComponents/charts/bar/BarChart.component.js","config/socketRoutes.js","components/mainBlock/Main.component.js","components/mainBlock/main.index.js","App.component.js","App.index.js","index.js","redux/configureStore.js"],"names":["sagaOnShowNotification","showNotification","createRoutine","payload","put","success","console","error","failure","data","handleActions","SUCCESS","state","type","message","status","FAILURE","combineReducers","notificationRedux","notificationReduxWatcher","all","takeLatest","TRIGGER","rootSaga","fork","HeaderWrapper","styled","header","Title","h1","Header","FooterWrapper","footer","h5","Footer","ChartWrapper","div","LineChart","props","createChart","config","title","label","barColor","yAxesTicks","myChart","Chart","chartRef","current","options","display","text","fontSize","fontColor","maintainAspectRatio","scales","xAxes","time","unit","displayFormats","second","stacked","gridLines","color","zeroLineColor","ticks","yAxes","min","max","legend","position","labels","map","d","timestamp","datasets","value","fill","backgroundColor","pointRadius","borderColor","borderWidth","lineTension","updateChart","length","update","React","createRef","this","prevProps","prevState","ref","Component","BarChart","categories","canvasRef","category","from","to","order","filter","item","minBarLength","some","number","socketRoutes","params1","params2","hostname","window","location","socketAddress","randomNumbers","MainWrapper","main","ChartsWrapper","InputWrapper","Label","Input","input","MainBlock","handleCangeInput","target","name","test","setState","response","threshold","socket","socketIOClient","on","toFixed","close","onChange","connect","notification","App","enqueueSnackbar","variant","className","withSnackbar","store","sagaMiddleware","createSagaMiddleware","createStore","RootReducer","composeWithDevTools","applyMiddleware","runSaga","run","configureStore","root","document","getElementById","ReactDOM","render","maxSnack","anchorOrigin","vertical","horizontal","autoHideDuration","createElement"],"mappings":"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","file":"static/js/main.f218815b.chunk.js","sourcesContent":["import { createRoutine } from 'redux-saga-routines';\r\n\r\nimport { put } from 'redux-saga/effects';\r\n\r\nexport const showNotification = createRoutine('SHOWNOTIFICATION');\r\n\r\nexport function* sagaOnShowNotification({ payload }) {\r\n  try {\r\n    yield put(showNotification.success(payload));\r\n  } catch (e) {\r\n    console.error('error', e);\r\n    yield put(showNotification.failure(e));\r\n  }\r\n}\r\n","import { handleActions } from 'redux-actions';\r\nimport { combineReducers } from 'redux';\r\n\r\nimport { showNotification } from '../../commonComponents/notifications/notification.action';\r\n\r\nconst initialState = {\r\n  type: '',\r\n  message: '',\r\n  status: false,\r\n};\r\n\r\nconst data = handleActions(\r\n  {\r\n    [showNotification.SUCCESS](state, payload) {\r\n      return {\r\n        type: payload.payload.type,\r\n        message: payload.payload.message,\r\n        status: !state.status,\r\n      };\r\n    },\r\n    [showNotification.FAILURE](state, payload) {\r\n      return {\r\n        type: 'error',\r\n        message: `Something went wrong - ${payload.payload.message}`,\r\n        status: !state.status,\r\n      };\r\n    },\r\n  },\r\n  initialState\r\n);\r\n\r\nexport default combineReducers({\r\n  data,\r\n});\r\n","import { combineReducers } from 'redux';\r\n\r\nimport notificationRedux from './notificationRedux.reducer';\r\nexport default combineReducers({\r\n  notificationRedux,\r\n});\r\n","import { takeLatest, all } from 'redux-saga/effects';\r\n\r\nimport { showNotification, sagaOnShowNotification } from './notification.action';\r\n\r\nexport function* notificationReduxWatcher() {\r\n  yield all([takeLatest(showNotification.TRIGGER, sagaOnShowNotification)]);\r\n}\r\n","import { all, fork } from 'redux-saga/effects';\r\n\r\nimport { notificationReduxWatcher } from '../commonComponents/notifications/notification.saga';\r\n\r\nexport default function* rootSaga() {\r\n  yield all([fork(notificationReduxWatcher)]);\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst HeaderWrapper = styled.header`\r\n  width: 100%;\r\n  height: 10vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  &:after {\r\n    position: absolute;\r\n    top: 10vh;\r\n    content: '';\r\n    height: 1px;\r\n    width: 100%;\r\n    background-color: grey;\r\n  }\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  color: white;\r\n`;\r\n\r\nconst Header = () => {\r\n  return (\r\n    <HeaderWrapper>\r\n      <Title>Charts</Title>\r\n    </HeaderWrapper>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst FooterWrapper = styled.footer`\r\n  width: 100%;\r\n  height: 10vh;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  &:before {\r\n    position: absolute;\r\n    bottom: 10vh;\r\n    content: '';\r\n    height: 1px;\r\n    width: 100%;\r\n    background-color: grey;\r\n  }\r\n`;\r\n\r\nconst Title = styled.h5`\r\n  color: white;\r\n  padding: 0px 10px;\r\n`;\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <FooterWrapper>\r\n      <Title>Savastru Mishel</Title>\r\n    </FooterWrapper>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { Component } from 'react';\r\nimport Chart from 'chart.js';\r\nimport styled from 'styled-components';\r\n\r\nconst ChartWrapper = styled.div`\r\n  width: 90%;\r\n  height: 400px;\r\n  margin-bottom: 30px;\r\n  @media (min-width: 860px) {\r\n    width: 45%;\r\n  }\r\n`;\r\n\r\nclass LineChart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.chartRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.createChart();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { data } = this.props;\r\n    if (prevProps.data !== data) {\r\n      this.updateChart();\r\n    }\r\n  }\r\n\r\n  createChart = () => {\r\n    const {\r\n      data,\r\n      config: { type, title, label, barColor, yAxesTicks },\r\n    } = this.props;\r\n\r\n    this.myChart = new Chart(this.chartRef.current, {\r\n      type: type,\r\n      options: {\r\n        title: {\r\n          display: true,\r\n          text: title,\r\n          fontSize: 20,\r\n          fontColor: 'white',\r\n        },\r\n        maintainAspectRatio: false,\r\n        scales: {\r\n          xAxes: [\r\n            {\r\n              type: 'time',\r\n              time: {\r\n                unit: 'second',\r\n                displayFormats: {\r\n                  second: 'mm:ss a',\r\n                },\r\n                stacked: true,\r\n              },\r\n              gridLines: {\r\n                color: 'rgb(91, 91, 91)',\r\n                zeroLineColor: 'rgb(91, 91, 91)',\r\n              },\r\n              ticks: {\r\n                fontColor: 'white',\r\n              },\r\n            },\r\n          ],\r\n          yAxes: [\r\n            {\r\n              gridLines: {\r\n                color: 'rgb(91, 91, 91)',\r\n                zeroLineColor: 'rgb(91, 91, 91)',\r\n              },\r\n              ticks: {\r\n                min: yAxesTicks.min,\r\n                max: yAxesTicks.max,\r\n                fontColor: 'white',\r\n              },\r\n            },\r\n          ],\r\n        },\r\n        legend: {\r\n          display: true,\r\n          position: 'bottom',\r\n          labels: {\r\n            fontColor: 'rgb(255, 99, 132)',\r\n          },\r\n        },\r\n      },\r\n      data: {\r\n        labels: data.map(d => d.timestamp),\r\n        datasets: [\r\n          {\r\n            label: label,\r\n            data: data.map(d => d.value),\r\n            fill: 'none',\r\n            backgroundColor: barColor,\r\n            pointRadius: 3,\r\n            borderColor: barColor,\r\n            borderWidth: 1,\r\n            lineTension: 0,\r\n          },\r\n        ],\r\n      },\r\n    });\r\n  };\r\n\r\n  updateChart = () => {\r\n    const { data } = this.props;\r\n\r\n    this.myChart.data.labels = data.map(d => d.timestamp);\r\n    this.myChart.data.datasets[0].data = data.map(d => d.value);\r\n    this.myChart.options.scales.xAxes[0].time.unit = data.length < 10 ? 'second' : 'minute';\r\n    this.myChart.update();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <ChartWrapper>\r\n        <canvas ref={this.chartRef} />\r\n      </ChartWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LineChart;\r\n","import React, { Component } from 'react';\r\nimport Chart from 'chart.js';\r\nimport styled from 'styled-components';\r\n\r\nconst ChartWrapper = styled.div`\r\n  width: 90%;\r\n  height: 400px;\r\n  margin-bottom: 30px;\r\n  @media (min-width: 860px) {\r\n    width: 45%;\r\n  }\r\n`;\r\n\r\nclass BarChart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.canvasRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.createChart();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { data } = this.props;\r\n    if (prevProps.data !== data) {\r\n      this.updateChart();\r\n    }\r\n  }\r\n\r\n  createChart = () => {\r\n    const {\r\n      data,\r\n      config: { type, title, label, barColor, yAxesTicks, categories },\r\n    } = this.props;\r\n\r\n    this.myChart = new Chart(this.canvasRef.current, {\r\n      type: type,\r\n      options: {\r\n        title: {\r\n          display: true,\r\n          text: title,\r\n          fontSize: 20,\r\n          fontColor: 'white',\r\n        },\r\n        maintainAspectRatio: false,\r\n        scales: {\r\n          xAxes: [\r\n            {\r\n              gridLines: {\r\n                color: 'rgb(91, 91, 91)',\r\n              },\r\n              ticks: {\r\n                fontColor: 'white',\r\n              },\r\n            },\r\n          ],\r\n          yAxes: [\r\n            {\r\n              gridLines: {\r\n                color: 'rgb(91, 91, 91)',\r\n                zeroLineColor: 'rgb(91, 91, 91)',\r\n              },\r\n              ticks: {\r\n                min: yAxesTicks.min,\r\n                max: yAxesTicks.max,\r\n                fontColor: 'white',\r\n              },\r\n            },\r\n          ],\r\n        },\r\n        legend: {\r\n          display: true,\r\n          position: 'bottom',\r\n          labels: {\r\n            fontColor: 'rgb(255, 99, 132)',\r\n          },\r\n        },\r\n      },\r\n      data: {\r\n        labels: categories.map(category => `${category.from} - ${category.to}`),\r\n        datasets: [\r\n          {\r\n            label: label,\r\n            order: 2,\r\n            data: categories.map(\r\n              category => data.filter(item => item.value >= category.from && item.value <= category.to).length\r\n            ),\r\n            backgroundColor: barColor,\r\n            minBarLength: 1,\r\n          },\r\n        ],\r\n      },\r\n    });\r\n  };\r\n\r\n  updateChart = () => {\r\n    const {\r\n      config: { categories },\r\n      data,\r\n    } = this.props;\r\n\r\n    this.myChart.data.datasets[0].data = categories.map(\r\n      category => data.filter(item => item.value >= category.from && item.value <= category.to).length\r\n    );\r\n    const { max } = this.myChart.options.scales.yAxes[0].ticks;\r\n    this.myChart.data.datasets[0].data.some(number => number >= max) &&\r\n      (this.myChart.options.scales.yAxes[0].ticks.max += 10);\r\n    this.myChart.update();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <ChartWrapper>\r\n        <canvas ref={this.canvasRef} />\r\n      </ChartWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BarChart;\r\n","const socketRoutes = (params1, params2) => {\r\n  const { hostname } = window.location;\r\n  // we can add here route to certain server\r\n  const socketAddress = hostname === 'mishel-s.github.io' ? `http://localhost:9876` : `http://${hostname}:9876`;\r\n  return {\r\n    randomNumbers: `${socketAddress}`,\r\n  };\r\n};\r\n\r\nexport default socketRoutes;\r\n","import React, { Component } from 'react';\r\nimport socketIOClient from 'socket.io-client';\r\nimport styled from 'styled-components';\r\n\r\nimport LineChart from '../../commonComponents/charts/line/LineChart.component';\r\nimport BarChart from '../../commonComponents/charts/bar/BarChart.component';\r\n\r\nimport socketRoutes from '../../config/socketRoutes';\r\n\r\nconst MainWrapper = styled.main`\r\n  width: 100%;\r\n  min-height: 80vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  padding: 50px 0;\r\n  @media (min-width: 860px) {\r\n    padding: 0;\r\n  }\r\n`;\r\n\r\nconst ChartsWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  @media (min-width: 860px) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nconst InputWrapper = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 60px;\r\n\r\n  &:hover {\r\n    &:before {\r\n      position: absolute;\r\n      top: 70px;\r\n      background-color: #464646;\r\n      font-size: 14px;\r\n      width: 200px;\r\n      content: 'You can enter number and see in the notification all of the payloaded values, that greater then entered!';\r\n      color: white;\r\n      z-index: 1;\r\n      border-radius: 5px;\r\n    }\r\n  }\r\n\r\n  @media (min-width: 860px) {\r\n    &:hover {\r\n      &:before {\r\n        top: 50px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Label = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  align-items: center;\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n  color: white;\r\n\r\n  @media (min-width: 860px) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nconst Input = styled.input`\r\n  margin: 10px;\r\n`;\r\n\r\nclass MainBlock extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      response: [],\r\n      threshold: '',\r\n    };\r\n    this.socket = socketIOClient(socketRoutes().randomNumbers);\r\n  }\r\n  componentDidMount() {\r\n    const { socket } = this;\r\n    socket.on('data', data => {\r\n      this.setState({ ...this.state, response: [...this.state.response, data] });\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.response.length !== this.state.response.length) {\r\n      const { showNotification } = this.props;\r\n      const { response, threshold } = this.state;\r\n      if (threshold && +response.length > 0 && response[response.length - 1].value > +threshold) {\r\n        showNotification({\r\n          message: `The payloaded value is ${response[response.length - 1].value.toFixed(2)}`,\r\n          type: 'info',\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { socket } = this;\r\n    socket.close();\r\n  }\r\n\r\n  handleCangeInput = ({ target: { name, value } }) => {\r\n    let regExpNumbers = /^$|^-?[\\d]*$|^-?[\\d]+[.][\\d]{0,2}$/;\r\n\r\n    name === 'threshold' &&\r\n      regExpNumbers.test(value) &&\r\n      this.setState(() => ({\r\n        [name]: value,\r\n      }));\r\n  };\r\n\r\n  render() {\r\n    const { threshold, response } = this.state;\r\n    return (\r\n      <MainWrapper>\r\n        <ChartsWrapper>\r\n          <LineChart\r\n            data={response && response}\r\n            config={{\r\n              type: 'line',\r\n              title: 'A line chart',\r\n              label: 'Number values',\r\n              barColor: '#70CAD1',\r\n              yAxesTicks: {\r\n                min: -100,\r\n                max: 100,\r\n              },\r\n            }}\r\n          />\r\n          <BarChart\r\n            data={response && response}\r\n            config={{\r\n              type: 'bar',\r\n              title: 'A bar chart',\r\n              label: 'The amount of numbers',\r\n              barColor: '#70CAD1',\r\n              yAxesTicks: {\r\n                min: 0,\r\n                max: 10,\r\n              },\r\n              categories: [\r\n                { from: -100, to: -81 },\r\n                { from: -80, to: -61 },\r\n                { from: -60, to: -41 },\r\n                { from: -40, to: -21 },\r\n                { from: -20, to: -1 },\r\n                { from: 0, to: 20 },\r\n                { from: 21, to: 40 },\r\n                { from: 41, to: 60 },\r\n                { from: 61, to: 80 },\r\n                { from: 81, to: 100 },\r\n              ],\r\n            }}\r\n          />\r\n        </ChartsWrapper>\r\n        <InputWrapper>\r\n          <Label>\r\n            Enter threshold: <Input type=\"text\" value={threshold} name={'threshold'} onChange={this.handleCangeInput} />\r\n          </Label>\r\n        </InputWrapper>\r\n      </MainWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainBlock;\r\n","import { connect } from 'react-redux';\r\n\r\nimport MainBlock from './Main.component';\r\n\r\nimport { showNotification } from '../../commonComponents/notifications/notification.action';\r\n\r\nconst mapStateToProps = state => ({\r\n  notification: state.notificationRedux.data,\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    showNotification,\r\n  }\r\n)(MainBlock);\r\n","import React, { Component } from 'react';\nimport { withSnackbar } from 'notistack';\n\nimport Header from './components/header.component';\nimport Footer from './components/footer.component';\nimport MainBlock from './components/mainBlock/main.index';\n\nimport './App.css';\n\nclass App extends Component {\n  componentDidUpdate(prevProps, prevState) {\n    const { notificationRedux, enqueueSnackbar } = this.props;\n    if (prevProps.notificationRedux.status !== notificationRedux.status)\n      enqueueSnackbar(notificationRedux.message, { variant: notificationRedux.type });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <MainBlock />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default withSnackbar(App);\n","import { connect } from 'react-redux';\r\n\r\nimport App from './App.component';\r\n\r\nconst mapStateToProps = store => ({\r\n  notificationRedux: store.notificationRedux.data,\r\n});\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport configureStore from './redux/configureStore';\nimport rootSaga from './redux/sagas';\nimport { SnackbarProvider } from 'notistack';\n\nimport './index.css';\nimport App from './App.index';\n// import * as serviceWorker from './serviceWorker';\n\nconst store = configureStore();\nstore.runSaga(rootSaga);\n\nconst root = document.getElementById('root');\n\nconst render = () => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <SnackbarProvider\n        maxSnack={3}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n        autoHideDuration={2500}\n      >\n        <App />\n      </SnackbarProvider>\n    </Provider>,\n    root ? root : document.createElement('div')\n  );\n};\n\nif (module.hot) {\n  module.hot.accept(App, () => {\n    render();\n  });\n}\nrender();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n","import createSagaMiddleware from 'redux-saga';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport RootReducer from './reducers/RootReducer.reducer';\r\n\r\nexport default function configureStore() {\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  return {\r\n    ...createStore(RootReducer, {}, composeWithDevTools(applyMiddleware(sagaMiddleware))),\r\n    runSaga: sagaMiddleware.run,\r\n  };\r\n}\r\n"],"sourceRoot":""}